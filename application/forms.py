#Imports
from flask_wtf import FlaskForm
from wtforms import StringField, RadioField, PasswordField, SubmitField, EmailField, StringField, IntegerField, DateField, SelectField, FileField
from wtforms.validators import InputRequired, Length, Email, DataRequired, EqualTo, Optional, Regexp

class CreatePlayerAccountForm(FlaskForm):
    name = StringField('Full Name:', validators=[InputRequired(), Length(max=50), Regexp('^[a-zA-Z]+$', message='Please use letters only!')])
    email = EmailField('Email:', validators=[InputRequired(), Email(), Length(max=50)])
    birthday_GMT = DateField('Date of Birth:', format='%Y-%m-%d')
    password = PasswordField('Password:', validators=[Length(min=8), EqualTo('checkPassword', message='Passwords must match!'), Regexp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$', message='Password needs to contain at least: 1 uppercase letter, 1 lower case letter, 1 number, 1 special character')])
    checkPassword = PasswordField('Re-enter password:')
    submit = SubmitField('Register')

class CreateManagerAccountForm(FlaskForm):
    name = StringField('Full Name:', validators=[InputRequired(), Length(max=50), Regexp('^[a-zA-Z]+$', message='Please use letters only!')])
    email = EmailField('Email:', validators=[InputRequired(), Email(), Length(max=50)])
    birthday_GMT = DateField('Date of Birth:', format='%Y-%m-%d')
    team = SelectField('Current Club:', validators=[InputRequired(), Length(max=50)], choices=[('','---'),('ARSENAL FC', 'ARSENAL FC'), ('TOTTENHAM HOTSPUR FC', 'TOTTENHAM HOTSPUR FC'), ('MANCHESTER CITY FC', 'MANCHESTER CITY FC'), ('LEICESTER CITY FC', 'LEICESTER CITY FC'), ('CRYSTAL PALACE FC', 'CRYSTAL PALACE FC'), ('EVERTON FC', 'EVERTON FC'), ('BURNLEY FC', 'BURNLEY FC'), ('SOUTHAMPTON FC', 'SOUTHAMPTON FC'), ('AFC BOURNEMOUTH', 'AFC BOURNEMOUTH'), ('MANCHESTER UNITED FC', 'MANCHESTER UNITED FC'), ('LIVERPOOL FC', 'LIVERPOOL FC'), ('CHELSEA FC', 'CHELSEA FC'), ('WEST HAM UNITED FC', 'WEST HAM UNITED FC'), ('WATFORD FC', 'WATFORD FC'), ('NEWCASTLE UNITED FC', 'NEWCASTLE UNITED FC'), ('CARDIFF CITY FC', 'CARDIFF CITY FC'), ('FULHAM FC', 'FULHAM FC'), ('BRIGHTON & HOVE ALBION FC', 'BRIGHTON & HOVE ALBION FC'), ('HUDDERSFIELD TOWN FC', 'HUDDERSFIELD TOWN FC'), ('WOLVERHAMPTON WANDERERS FC', 'WOLVERHAMPTON WANDERERS FC')])
    password = PasswordField('Password:', validators=[Length(min=8), EqualTo('checkPassword', message='Passwords must match!'), Regexp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$', message='Password needs to contain at least: 1 uppercase letter, 1 lower case letter, 1 number, 1 special character')])
    checkPassword = PasswordField('Re-enter password:')
    submit = SubmitField('Register')

class LoginForm(FlaskForm):
    email = EmailField('Email:', validators=[InputRequired(), Email(), Length(max=50)], )
    password = PasswordField('Password:', validators=[InputRequired(), Length(min=8)])
    submit = SubmitField('Login')

class SearchBarForm(FlaskForm):
    search = StringField(validators=[DataRequired(), Length(max=50)])
    submit = SubmitField('Search')

class SearchPlayerBarForm(FlaskForm):
    name = StringField('Name:', validators=[Optional(), Length(max=50), Regexp('^[a-zA-Z]+$', message='Please use letters only!')])
    position = RadioField('Position:', validators=[Optional()], choices = ['Goalkeeper', 'Defender', 'Midfielder', 'Forward'])
    minMatchesPlayed = IntegerField('Minimum Matches Played:', validators=[Optional()])
    minGoalsScored = IntegerField('Minimum Goals Scored:', validators=[Optional()])
    assists = IntegerField('Minimum Assists:', validators=[Optional()])
    cleanSheets = IntegerField('Minimum Clean Sheets:', validators=[Optional()])
    submit = SubmitField('Search')

class SearchTeamBarForm(FlaskForm):
    name = StringField('Name:', validators=[Optional(), Length(max=50), Regexp('^[a-zA-Z]+$', message='Please use letters only!')])
    minGoalsScored = IntegerField('Minimum Goals Scored:', validators=[Optional()])
    maxGoalsConceded = IntegerField('Maximum Goals Conceded:', validators=[Optional()])
    minWins = IntegerField('Minimum Wins:', validators=[Optional()])
    maxLosses = IntegerField('Maximum Losses:', validators=[Optional()])
    submit = SubmitField('Search')

class ManageAccountForm(FlaskForm):
    name = StringField('Name:', validators=[Optional(), Length(max=50), Regexp('^[a-zA-Z]+$', message='Please use letters only!')])
    email = EmailField('Email:', validators=[Email(), Optional(), Length(max=50)])
    password = PasswordField('Password:', validators=[Length(min=8), EqualTo('checkPassword', message='Passwords must match!'), Regexp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$', message='Password needs to contain at least: 1 uppercase letter, 1 lower case letter, 1 number, 1 special character'), Optional()])
    checkPassword = PasswordField('Re-enter password:')
    submit = SubmitField('Submit')

class TeamProfile(FlaskForm):
    matches_played = IntegerField('Matches Played:', default = 0)
    matches_played_home = IntegerField('Matches Played at Home:', default = 0)
    matches_played_away = IntegerField('Matches Played Away:', default = 0)
    wins = IntegerField('Total wins:', default = 0)
    wins_home = IntegerField('Wins at home:', default = 0)
    wins_away = IntegerField('Wins away:', default = 0)
    draws = IntegerField('Total draws:', default = 0)
    draws_home = IntegerField('Draws at home:', default = 0)
    draws_away = IntegerField('Draws away:', default = 0)
    losses = IntegerField('Total losses:', default = 0)
    losses_home = IntegerField('Losses at home:', default = 0)
    losses_away = IntegerField('Losses away:', default = 0)
    goals_scored = IntegerField('Total goals scored:', default = 0)
    goals_conceeded = IntegerField('Total goals conceeded:', default = 0)
    goals_scored_home = IntegerField('Goals Scored at home:', default = 0)
    goals_scored_away = IntegerField('Goals scored away:', default = 0)
    goals_conceeded_home = IntegerField('Goals conceeded at home:', default = 0)
    goals_conceeded_away = IntegerField('Goals conceeded away:', default = 0)
    clean_sheets = IntegerField('Overall cleen sheets:', default = 0)
    clean_sheets_home = IntegerField('Cleen sheets at home:', default = 0)
    clean_sheets_away = IntegerField('Cleen sheets away:', default = 0)
    cards_total = IntegerField('Overall cards:', default = 0)
    cards_total_home = IntegerField('Cards at home:', default = 0)
    cards_total_away = IntegerField('Cards away:', default = 0)
    average_possesion = IntegerField('Overall average possesion:', default = 0)
    average_possesion_home = IntegerField('Average possesion at home:', default = 0)
    average_possesion_away = IntegerField('Average possesion away:', default = 0)
    shots = IntegerField('Total shots:', default = 0)
    shots_on_target = IntegerField('Shots on target:', default = 0)
    shots_off_target = IntegerField('Shots off target:', default = 0)
    fouls = IntegerField('Total fouls conceeded:', default = 0)
    submit = SubmitField('Submit')

class ModifyTeamProfile(FlaskForm):
    team = SelectField('Current Club:', validators=[Optional()], choices=[('', '---'),('ARSENAL FC', 'ARSENAL FC'), ('TOTTENHAM HOTSPUR FC', 'TOTTENHAM HOTSPUR FC'), ('MANCHESTER CITY FC', 'MANCHESTER CITY FC'), ('LEICESTER CITY FC', 'LEICESTER CITY FC'), ('CRYSTAL PALACE FC', 'CRYSTAL PALACE FC'), ('EVERTON FC', 'EVERTON FC'), ('BURNLEY FC', 'BURNLEY FC'), ('SOUTHAMPTON FC', 'SOUTHAMPTON FC'), ('AFC BOURNEMOUTH', 'AFC BOURNEMOUTH'), ('MANCHESTER UNITED FC', 'MANCHESTER UNITED FC'), ('LIVERPOOL FC', 'LIVERPOOL FC'), ('CHELSEA FC', 'CHELSEA FC'), ('WEST HAM UNITED FC', 'WEST HAM UNITED FC'), ('WATFORD FC', 'WATFORD FC'), ('NEWCASTLE UNITED FC', 'NEWCASTLE UNITED FC'), ('CARDIFF CITY FC', 'CARDIFF CITY FC'), ('FULHAM FC', 'FULHAM FC'), ('BRIGHTON & HOVE ALBION FC', 'BRIGHTON & HOVE ALBION FC'), ('HUDDERSFIELD TOWN FC', 'HUDDERSFIELD TOWN FC'), ('WOLVERHAMPTON WANDERERS FC', 'WOLVERHAMPTON WANDERERS FC')])
    matches_played = IntegerField('Matches Played:', validators=[Optional()])
    matches_played_home = IntegerField('Matches Played at Home:', validators=[Optional()])
    matches_played_away = IntegerField('Matches Played Away:', validators=[Optional()])
    wins = IntegerField('Total wins:', validators=[Optional()])
    wins_home = IntegerField('Wins at home:', validators=[Optional()])
    wins_away = IntegerField('Wins away:', validators=[Optional()])
    draws = IntegerField('Total draws:', validators=[Optional()])
    draws_home = IntegerField('Draws at home:', validators=[Optional()])
    draws_away = IntegerField('Draws away:', validators=[Optional()])
    losses = IntegerField('Total losses:', validators=[Optional()])
    losses_home = IntegerField('Losses at home:', validators=[Optional()])
    losses_away = IntegerField('Losses away:', validators=[Optional()])
    goals_scored = IntegerField('Total goals scored:', validators=[Optional()])
    goals_conceeded = IntegerField('Total goals conceeded:', validators=[Optional()])
    goals_scored_home = IntegerField('Goals Scored at home:', validators=[Optional()])
    goals_scored_away = IntegerField('Goals scored away:', validators=[Optional()])
    goals_conceeded_home = IntegerField('Goals conceeded at home:', validators=[Optional()])
    goals_conceeded_away = IntegerField('Goals conceeded away:', validators=[Optional()])
    clean_sheets = IntegerField('Overall cleen sheets:', validators=[Optional()])
    clean_sheets_home = IntegerField('Cleen sheets at home:', validators=[Optional()])
    clean_sheets_away = IntegerField('Cleen sheets away:', validators=[Optional()])
    cards_total = IntegerField('Overall cards:', validators=[Optional()])
    cards_total_home = IntegerField('Cards at home:', validators=[Optional()])
    cards_total_away = IntegerField('Cards away:', validators=[Optional()])
    average_possesion = IntegerField('Overall average possesion:', validators=[Optional()])
    average_possesion_home = IntegerField('Average possesion at home:', validators=[Optional()])
    average_possesion_away = IntegerField('Average possesion away:', validators=[Optional()])
    shots = IntegerField('Total shots:', validators=[Optional()])
    shots_on_target = IntegerField('Shots on target:', validators=[Optional()])
    shots_off_target = IntegerField('Shots off target:', validators=[Optional()])
    fouls = IntegerField('Total fouls conceeded:', validators=[Optional()])
    submit = SubmitField('Submit')

class PlayerProfile(FlaskForm):
    position = RadioField('Position:', validators=[InputRequired()], choices = ['Goalkeeper', 'Defender', 'Midfielder', 'Forward'])
    nationality = SelectField('Nationality:', validators=[InputRequired()], choices=[('England', 'English'), ('Scotland', 'Scottish'), ('Italy', 'Italian')])
    currentClub = SelectField('Current Club:', validators=[InputRequired()], choices=[('','---'),('ARSENAL FC', 'ARSENAL FC'), ('TOTTENHAM HOTSPUR FC', 'TOTTENHAM HOTSPUR FC'), ('MANCHESTER CITY FC', 'MANCHESTER CITY FC'), ('LEICESTER CITY FC', 'LEICESTER CITY FC'), ('CRYSTAL PALACE FC', 'CRYSTAL PALACE FC'), ('EVERTON FC', 'EVERTON FC'), ('BURNLEY FC', 'BURNLEY FC'), ('SOUTHAMPTON FC', 'SOUTHAMPTON FC'), ('AFC BOURNEMOUTH', 'AFC BOURNEMOUTH'), ('MANCHESTER UNITED FC', 'MANCHESTER UNITED FC'), ('LIVERPOOL FC', 'LIVERPOOL FC'), ('CHELSEA FC', 'CHELSEA FC'), ('WEST HAM UNITED FC', 'WEST HAM UNITED FC'), ('WATFORD FC', 'WATFORD FC'), ('NEWCASTLE UNITED FC', 'NEWCASTLE UNITED FC'), ('CARDIFF CITY FC', 'CARDIFF CITY FC'), ('FULHAM FC', 'FULHAM FC'), ('BRIGHTON & HOVE ALBION FC', 'BRIGHTON & HOVE ALBION FC'), ('HUDDERSFIELD TOWN FC', 'HUDDERSFIELD TOWN FC'), ('WOLVERHAMPTON WANDERERS FC', 'WOLVERHAMPTON WANDERERS FC')])
    minutesPlayedOverall = IntegerField('Overall Minutes played:', default = 0)
    minutesPlayedHome = IntegerField('Minutes Played at Home:', default = 0)
    minutesPlayedAway = IntegerField('Minutes Played Away:', default = 0)
    apperancesOverall = IntegerField('Overall Apperances:', default = 0)
    apperancesHome = IntegerField('Apperances at Home:', default = 0)
    apperancesAway = IntegerField('Apperances Away:', default = 0)
    overallGoals = IntegerField('Overall Goals Scored:', default = 0)
    goalsHome = IntegerField('Goals Scored at Home:', default = 0)
    goalsAway = IntegerField('Goals Scored Away:', default = 0)
    overallAssist = IntegerField('Overall Assist:', default = 0)
    assistHome = IntegerField('Assists at Home:', default = 0)
    assistAway = IntegerField('Assist Away:', default = 0)
    penaltyScored = IntegerField('Penalty Scored:', default = 0)
    penaltyMiss = IntegerField('Penalty Missed:', default = 0)
    cleanSheets = IntegerField('Clean Sheets:', default = 0)
    yellowCards = IntegerField('Yellow Cards:', default = 0)
    redCards = IntegerField('Red Cards:', default = 0)
    submit = SubmitField('Submit')

class ModifyPlayerProfile(FlaskForm):
    currentClub = SelectField('Current Club:', validators=[Optional()], choices=[('', '---'), ('ARSENAL FC', 'ARSENAL FC'), ('TOTTENHAM HOTSPUR FC', 'TOTTENHAM HOTSPUR FC'), ('MANCHESTER CITY FC', 'MANCHESTER CITY FC'), ('LEICESTER CITY FC', 'LEICESTER CITY FC'), ('CRYSTAL PALACE FC', 'CRYSTAL PALACE FC'), ('EVERTON FC', 'EVERTON FC'), ('BURNLEY FC', 'BURNLEY FC'), ('SOUTHAMPTON FC', 'SOUTHAMPTON FC'), ('AFC BOURNEMOUTH', 'AFC BOURNEMOUTH'), ('MANCHESTER UNITED FC', 'MANCHESTER UNITED FC'), ('LIVERPOOL FC', 'LIVERPOOL FC'), ('CHELSEA FC', 'CHELSEA FC'), ('WEST HAM UNITED FC', 'WEST HAM UNITED FC'), ('WATFORD FC', 'WATFORD FC'), ('NEWCASTLE UNITED FC', 'NEWCASTLE UNITED FC'), ('CARDIFF CITY FC', 'CARDIFF CITY FC'), ('FULHAM FC', 'FULHAM FC'), ('BRIGHTON & HOVE ALBION FC', 'BRIGHTON & HOVE ALBION FC'), ('HUDDERSFIELD TOWN FC', 'HUDDERSFIELD TOWN FC'), ('WOLVERHAMPTON WANDERERS FC', 'WOLVERHAMPTON WANDERERS FC')])
    minutesPlayedOverall = IntegerField('Overall Minutes played:', validators=[Optional()])
    minutesPlayedHome = IntegerField('Minutes Played at Home:', validators=[Optional()])
    minutesPlayedAway = IntegerField('Minutes Played Away:', validators=[Optional()])
    apperancesOverall = IntegerField('Overall Apperances:', validators=[Optional()])
    apperancesHome = IntegerField('Apperances at Home:', validators=[Optional()])
    apperancesAway = IntegerField('Apperances Away:', validators=[Optional()])
    overallGoals = IntegerField('Overall Goals Scored:', validators=[Optional()])
    goalsHome = IntegerField('Goals Scored at Home:', validators=[Optional()])
    goalsAway = IntegerField('Goals Scored Away:', validators=[Optional()])
    overallAssist = IntegerField('Overall Assist:', validators=[Optional()])
    assistHome = IntegerField('Assists at Home:', validators=[Optional()])
    assistAway = IntegerField('Assist Away:', validators=[Optional()])
    penaltyScored = IntegerField('Penalty Scored:', validators=[Optional()])
    penaltyMiss = IntegerField('Penalty Missed:', validators=[Optional()])
    cleanSheets = IntegerField('Clean Sheets:', validators=[Optional()])
    yellowCards = IntegerField('Yellow Cards:', validators=[Optional()])
    redCards = IntegerField('Red Cards:', validators=[Optional()])
    submit = SubmitField('Submit')
